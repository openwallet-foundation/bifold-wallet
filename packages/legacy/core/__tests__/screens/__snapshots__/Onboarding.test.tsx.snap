// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Onboarding Screen Onboarding Developer mode 1`] = `
<RNCSafeAreaView
  edges={
    Object {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "off",
    }
  }
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        <ScrollView
          style={
            Object {
              "padding": 20,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
              }
            }
          >
            <
              style={
                Object {
                  "height": 180,
                  "width": 180,
                }
              }
            />
          </View>
          <View
            style={
              Object {
                "marginBottom": 20,
              }
            }
          >
            <TouchableWithoutFeedback
              onPress={[MockFunction]}
              testID="com.ariesbifold:id/DeveloperModeTouch"
            >
              <ThemedText
                style={Object {}}
                testID="com.ariesbifold:id/HeaderText"
              >
                test
              </ThemedText>
            </TouchableWithoutFeedback>
            <ThemedText
              style={
                Array [
                  Object {
                    "flexShrink": 1,
                  },
                  Object {
                    "marginTop": 25,
                  },
                ]
              }
              testID="com.ariesbifold:id/BodyText"
            >
              body
            </ThemedText>
          </View>
        </ScrollView>,
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onViewableItemsChanged={[Function]}
    pagingEnabled={true}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={16}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "width": 750,
      }
    }
    viewabilityConfig={
      Object {
        "viewAreaCoveragePercentThreshold": 60,
      }
    }
    viewabilityConfigCallbackPairs={
      Array [
        Object {
          "onViewableItemsChanged": [Function],
          "viewabilityConfig": Object {
            "viewAreaCoveragePercentThreshold": 60,
          },
        },
      ]
    }
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "width": 750,
              },
              Object {
                "backgroundColor": "#000000",
                "flexDirection": "column",
              },
            ]
          }
        >
          <RCTScrollView
            style={
              Object {
                "padding": 20,
              }
            }
          >
            <View>
              <View
                style={
                  Object {
                    "alignItems": "center",
                  }
                }
              >
                <
                  style={
                    Object {
                      "height": 180,
                      "width": 180,
                    }
                  }
                />
              </View>
              <View
                style={
                  Object {
                    "marginBottom": 20,
                  }
                }
              >
                <Text
                  accessibilityState={
                    Object {
                      "busy": undefined,
                      "checked": undefined,
                      "disabled": undefined,
                      "expanded": undefined,
                      "selected": undefined,
                    }
                  }
                  accessible={true}
                  focusable={true}
                  maxFontSizeMultiplier={2}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Array [
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 18,
                        "fontWeight": "normal",
                      },
                      Object {},
                    ]
                  }
                  testID="com.ariesbifold:id/DeveloperModeTouch"
                >
                  test
                </Text>
                <Text
                  maxFontSizeMultiplier={2}
                  style={
                    Array [
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 18,
                        "fontWeight": "normal",
                      },
                      Array [
                        Object {
                          "flexShrink": 1,
                        },
                        Object {
                          "marginTop": 25,
                        },
                      ],
                    ]
                  }
                  testID="com.ariesbifold:id/BodyText"
                >
                  body
                </Text>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexShrink": 1,
        "marginBottom": 30,
      }
    }
  >
    <View
      accessibilityElementsHidden={true}
      accessibilityLabel="Global.Back"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 44,
          "left": 44,
          "right": 44,
          "top": 44,
        }
      }
      importantForAccessibility="no-hide-descendants"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="com.ariesbifold:id/Back"
    >
      <Text
        maxFontSizeMultiplier={2}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 18,
              "fontWeight": "normal",
            },
            Array [
              Object {
                "color": "#42803E",
                "fontSize": 18,
                "fontWeight": "bold",
              },
              Object {
                "color": "transparent",
                "paddingRight": 20,
              },
            ],
          ]
        }
      >
        Back
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
            "bottom": 20,
            "flexDirection": "row",
            "position": "absolute",
          },
          Object {
            "position": "relative",
            "top": 0,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "backgroundColor": "rgba(66, 128, 62, 1)",
            "borderColor": "#42803E",
            "borderRadius": 5,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 10,
            "marginHorizontal": 5,
            "opacity": 1,
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
            "width": 10,
          }
        }
      />
    </View>
    <View
      accessibilityElementsHidden={true}
      accessibilityLabel="Global.Next"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 44,
          "left": 44,
          "right": 44,
          "top": 44,
        }
      }
      importantForAccessibility="no-hide-descendants"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="com.ariesbifold:id/Next"
    >
      <Text
        maxFontSizeMultiplier={2}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 18,
              "fontWeight": "normal",
            },
            Array [
              Object {
                "color": "#42803E",
                "fontSize": 18,
                "fontWeight": "bold",
              },
              Object {
                "color": "transparent",
                "paddingLeft": 20,
              },
            ],
          ]
        }
      >
        Next
      </Text>
    </View>
  </View>
</RNCSafeAreaView>
`;

exports[`Onboarding Screen Renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    Object {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "off",
    }
  }
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#000000",
      "flex": 1,
    }
  }
>
  <RCTScrollView
    data={
      Array [
        <React.Fragment>
          <ThemedText
            testID="bodyText"
          >
            Hello
          </ThemedText>
        </React.Fragment>,
        <React.Fragment>
          <ThemedText
            testID="bodyText"
          >
            World
          </ThemedText>
        </React.Fragment>,
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={true}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    onViewableItemsChanged={[Function]}
    pagingEnabled={true}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={16}
    showsHorizontalScrollIndicator={false}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "width": 750,
      }
    }
    viewabilityConfig={
      Object {
        "viewAreaCoveragePercentThreshold": 60,
      }
    }
    viewabilityConfigCallbackPairs={
      Array [
        Object {
          "onViewableItemsChanged": [Function],
          "viewabilityConfig": Object {
            "viewAreaCoveragePercentThreshold": 60,
          },
        },
      ]
    }
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "width": 750,
              },
              Object {
                "backgroundColor": "#000000",
                "flexDirection": "column",
              },
            ]
          }
        >
          <Text
            maxFontSizeMultiplier={2}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontWeight": "normal",
                },
                undefined,
              ]
            }
            testID="bodyText"
          >
            Hello
          </Text>
        </View>
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={
          Array [
            Object {
              "flexDirection": "row",
            },
            null,
          ]
        }
      >
        <View
          style={
            Array [
              Object {
                "width": 750,
              },
              Object {
                "backgroundColor": "#000000",
                "flexDirection": "column",
              },
            ]
          }
        >
          <Text
            maxFontSizeMultiplier={2}
            style={
              Array [
                Object {
                  "color": "#FFFFFF",
                  "fontSize": 18,
                  "fontWeight": "normal",
                },
                undefined,
              ]
            }
            testID="bodyText"
          >
            World
          </Text>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "flexShrink": 1,
        "marginBottom": 30,
      }
    }
  >
    <View
      accessibilityElementsHidden={true}
      accessibilityLabel="Global.Back"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 44,
          "left": 44,
          "right": 44,
          "top": 44,
        }
      }
      importantForAccessibility="no-hide-descendants"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="com.ariesbifold:id/Back"
    >
      <Text
        maxFontSizeMultiplier={2}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 18,
              "fontWeight": "normal",
            },
            Array [
              Object {
                "color": "#42803E",
                "fontSize": 18,
                "fontWeight": "bold",
              },
              Object {
                "color": "transparent",
                "paddingRight": 20,
              },
            ],
          ]
        }
      >
        Back
      </Text>
    </View>
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
            "bottom": 20,
            "flexDirection": "row",
            "position": "absolute",
          },
          Object {
            "position": "relative",
            "top": 0,
          },
        ]
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "backgroundColor": "rgba(66, 128, 62, 1)",
            "borderColor": "#42803E",
            "borderRadius": 5,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 10,
            "marginHorizontal": 5,
            "opacity": 1,
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
            "width": 10,
          }
        }
      />
      <View
        collapsable={false}
        style={
          Object {
            "backgroundColor": "rgba(255, 255, 255, 1)",
            "borderColor": "#42803E",
            "borderRadius": 5,
            "borderStyle": "solid",
            "borderWidth": 1,
            "height": 10,
            "marginHorizontal": 5,
            "opacity": 1,
            "transform": Array [
              Object {
                "scale": 1,
              },
            ],
            "width": 10,
          }
        }
      />
    </View>
    <View
      accessibilityElementsHidden={false}
      accessibilityLabel="Global.Next"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 44,
          "left": 44,
          "right": 44,
          "top": 44,
        }
      }
      importantForAccessibility="auto"
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID="com.ariesbifold:id/Next"
    >
      <Text
        maxFontSizeMultiplier={2}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 18,
              "fontWeight": "normal",
            },
            Array [
              Object {
                "color": "#42803E",
                "fontSize": 18,
                "fontWeight": "bold",
              },
              Object {
                "color": "#42803E",
                "paddingLeft": 20,
              },
            ],
          ]
        }
      >
        Next
      </Text>
    </View>
  </View>
</RNCSafeAreaView>
`;
