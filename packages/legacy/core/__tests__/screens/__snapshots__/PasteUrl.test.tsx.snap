// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasteUrl Screen Paste URL renders correctly 1`] = `
<RNCSafeAreaView
  edges={
    Object {
      "bottom": "additive",
      "left": "additive",
      "right": "additive",
      "top": "additive",
    }
  }
  style={
    Object {
      "backgroundColor": "#000000",
      "flex": 1,
    }
  }
>
  <RCTScrollView>
    <View>
      <View
        style={
          Object {
            "margin": 20,
          }
        }
      >
        <Text
          maxFontSizeMultiplier={2}
          style={
            Array [
              Object {
                "color": "#FFFFFF",
                "fontSize": 18,
                "fontWeight": "normal",
              },
              Object {
                "marginBottom": 20,
              },
            ]
          }
        >
          PasteUrl.PasteUrlDescription
        </Text>
        <TextInput
          multiline={true}
          numberOfLines={15}
          onChangeText={[Function]}
          style={
            Object {
              "backgroundColor": "#D3D3D3",
              "borderColor": "#313132",
              "borderRadius": 5,
              "borderWidth": 1,
              "color": "#FFFFFF",
              "fontSize": 18,
              "fontWeight": "normal",
              "textAlignVertical": "top",
            }
          }
          testID="com.ariesbifold:id/PastedUrl"
          value=""
        />
      </View>
      <View
        style={
          Object {
            "margin": 20,
          }
        }
      >
        <View
          accessibilityState={
            Object {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            Object {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="com.ariesbifold:id/ScanPastedUrlDisabled"
        >
          <View
            accessibilityLabel="Global.Continue"
            accessibilityRole="button"
            accessibilityState={
              Object {
                "busy": undefined,
                "checked": undefined,
                "disabled": true,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              Object {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "rgba(53, 130, 63, 0.35)",
                "borderRadius": 4,
                "opacity": 1,
                "padding": 16,
              }
            }
            testID="com.ariesbifold:id/ScanPastedUrl"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 18,
                      "fontWeight": "normal",
                    },
                    Array [
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 18,
                        "fontWeight": "bold",
                        "textAlign": "center",
                      },
                      Object {
                        "color": "#FFFFFF",
                        "fontSize": 18,
                        "fontWeight": "bold",
                        "textAlign": "center",
                      },
                      false,
                      false,
                    ],
                  ]
                }
              >
                Global.Continue
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "marginTop": 15,
            }
          }
        >
          <View
            accessibilityLabel="PasteUrl.Clear"
            accessibilityRole="button"
            accessibilityState={
              Object {
                "busy": undefined,
                "checked": undefined,
                "disabled": false,
                "expanded": undefined,
                "selected": undefined,
              }
            }
            accessibilityValue={
              Object {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            collapsable={false}
            focusable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderColor": "#42803E",
                "borderRadius": 4,
                "borderWidth": 2,
                "opacity": 1,
                "padding": 16,
              }
            }
            testID="com.ariesbifold:id/ClearPastedUrl"
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                }
              }
            >
              <Text
                maxFontSizeMultiplier={2}
                style={
                  Array [
                    Object {
                      "color": "#FFFFFF",
                      "fontSize": 18,
                      "fontWeight": "normal",
                    },
                    Array [
                      Object {
                        "color": "#42803E",
                        "fontSize": 18,
                        "fontWeight": "bold",
                        "textAlign": "center",
                      },
                      false,
                      false,
                      false,
                    ],
                  ]
                }
              >
                PasteUrl.Clear
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RNCSafeAreaView>
`;
