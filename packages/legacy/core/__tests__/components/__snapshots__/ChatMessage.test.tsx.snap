// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChatMessage Credential offer renders correctly 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-end",
        "flexDirection": "column",
        "marginBottom": 16,
        "marginLeft": 16,
        "marginRight": 16,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flex": 1,
          },
          Object {
            "margin": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#f0f0f0",
              "borderRadius": 15,
              "justifyContent": "flex-end",
              "marginRight": 60,
              "minHeight": 20,
            },
            null,
            null,
            Object {
              "backgroundColor": "#313132",
              "borderRadius": 4,
              "marginLeft": 0,
              "marginRight": 0,
              "padding": 16,
            },
          ]
        }
      >
        <View
          accessibilityRole="text"
          accessibilityState={
            Object {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": "#42803E",
                  "borderRadius": 4,
                  "height": 50,
                  "justifyContent": "center",
                  "marginBottom": 16,
                  "width": 50,
                }
              }
            >
              <
                height={40}
                width={40}
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
                undefined,
              ]
            }
          >
            <Text
              maxFontSizeMultiplier={2}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 18,
                    "fontWeight": "normal",
                  },
                  Object {
                    "color": "#D3D3D3",
                    "fontSize": 12,
                    "marginTop": 8,
                  },
                ]
              }
            >
              Jan 1, 2024, 12:00 am
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityLabel="Chat.ViewOffer"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 44,
          "left": 44,
          "right": 44,
          "top": 44,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#42803E",
          "borderRadius": 32,
          "marginTop": 16,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
        }
      }
      testID="com.ariesbifold:id/Chat.ViewOffer"
    >
      <Text
        maxFontSizeMultiplier={2}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 18,
              "fontWeight": "normal",
            },
            Object {
              "fontSize": 18,
              "fontWeight": "bold",
              "textAlign": "center",
            },
          ]
        }
      >
        Chat.ViewOffer
      </Text>
    </View>
  </View>
</View>
`;

exports[`ChatMessage Proof request renders correctly 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-end",
        "flexDirection": "column",
        "marginBottom": 16,
        "marginLeft": 16,
        "marginRight": 16,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flex": 1,
          },
          Object {
            "margin": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#f0f0f0",
              "borderRadius": 15,
              "justifyContent": "flex-end",
              "marginRight": 60,
              "minHeight": 20,
            },
            null,
            null,
            Object {
              "backgroundColor": "#313132",
              "borderRadius": 4,
              "marginLeft": 0,
              "marginRight": 0,
              "padding": 16,
            },
          ]
        }
      >
        <View
          accessibilityRole="text"
          accessibilityState={
            Object {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": "#42803E",
                  "borderRadius": 4,
                  "height": 50,
                  "justifyContent": "center",
                  "marginBottom": 16,
                  "width": 50,
                }
              }
            >
              <
                height={40}
                width={40}
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
                undefined,
              ]
            }
          >
            <Text
              maxFontSizeMultiplier={2}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 18,
                    "fontWeight": "normal",
                  },
                  Object {
                    "color": "#D3D3D3",
                    "fontSize": 12,
                    "marginTop": 8,
                  },
                ]
              }
            >
              Jan 1, 2024, 12:00 am
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityLabel="Chat.ViewRequest"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 44,
          "left": 44,
          "right": 44,
          "top": 44,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#42803E",
          "borderRadius": 32,
          "marginTop": 16,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
        }
      }
      testID="com.ariesbifold:id/Chat.ViewRequest"
    >
      <Text
        maxFontSizeMultiplier={2}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 18,
              "fontWeight": "normal",
            },
            Object {
              "fontSize": 18,
              "fontWeight": "bold",
              "textAlign": "center",
            },
          ]
        }
      >
        Chat.ViewRequest
      </Text>
    </View>
  </View>
</View>
`;

exports[`ChatMessage Sent presentation renders correctly 1`] = `
<View
  style={
    Object {
      "flexDirection": "row",
      "justifyContent": "flex-end",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "alignSelf": "flex-end",
        "flexDirection": "column",
        "marginBottom": 16,
        "marginLeft": 16,
        "marginRight": 16,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "flex-start",
            "flex": 1,
          },
          Object {
            "margin": 0,
          },
        ]
      }
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "#f0f0f0",
              "borderRadius": 15,
              "justifyContent": "flex-end",
              "marginRight": 60,
              "minHeight": 20,
            },
            null,
            null,
            Object {
              "backgroundColor": "#313132",
              "borderRadius": 4,
              "marginLeft": 0,
              "marginRight": 0,
              "padding": 16,
            },
          ]
        }
      >
        <View
          accessibilityRole="text"
          accessibilityState={
            Object {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View>
            <View
              style={
                Object {
                  "alignItems": "center",
                  "alignSelf": "flex-start",
                  "backgroundColor": "#42803E",
                  "borderRadius": 4,
                  "height": 50,
                  "justifyContent": "center",
                  "marginBottom": 16,
                  "width": 50,
                }
              }
            >
              <
                height={40}
                width={40}
              />
            </View>
          </View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "justifyContent": "flex-start",
                },
                undefined,
              ]
            }
          >
            <Text
              maxFontSizeMultiplier={2}
              style={
                Array [
                  Object {
                    "color": "#FFFFFF",
                    "fontSize": 18,
                    "fontWeight": "normal",
                  },
                  Object {
                    "color": "#D3D3D3",
                    "fontSize": 12,
                    "marginTop": 8,
                  },
                ]
              }
            >
              Jan 1, 2024, 12:00 am
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      accessibilityLabel="Chat.OpenPresentation"
      accessibilityRole="button"
      accessibilityState={
        Object {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        Object {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 44,
          "left": 44,
          "right": 44,
          "top": 44,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "backgroundColor": "#42803E",
          "borderRadius": 32,
          "marginTop": 16,
          "opacity": 1,
          "paddingBottom": 8,
          "paddingLeft": 16,
          "paddingRight": 16,
          "paddingTop": 8,
        }
      }
      testID="com.ariesbifold:id/Chat.OpenPresentation"
    >
      <Text
        maxFontSizeMultiplier={2}
        style={
          Array [
            Object {
              "color": "#FFFFFF",
              "fontSize": 18,
              "fontWeight": "normal",
            },
            Object {
              "fontSize": 18,
              "fontWeight": "bold",
              "textAlign": "center",
            },
          ]
        }
      >
        Chat.OpenPresentation
      </Text>
    </View>
  </View>
</View>
`;
