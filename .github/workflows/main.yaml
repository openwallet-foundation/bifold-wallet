name: Native Build & Test

env:
  cacheId: '8' # increment to expire the cache

on:
  pull_request:
    branches: [main]
    paths:
      - 'packages/legacy/app/**'
      - 'packages/legacy/core/**'
      - 'packages/oca/**'
      - '**/package-lock.json'
    types: [opened, synchronize, reopened, labeled]
  push:
    branches: [main]

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node

      - name: Configure ruby
        uses: ruby/setup-ruby@v1
        with:
          working-directory: ./packages/legacy/app

      - name: Cache pod dependencies
        id: pod-cache
        uses: actions/cache@v4
        with:
          path: packages/legacy/app/ios/Pods
          key: ${{ runner.os }}-pods-${{ env.cacheId }}-${{ hashFiles('**/Podfile.lock ') }}
          restore-keys: |
            ${{ runner.os }}-pods-${{ env.cacheId }}-

      # Watch for changes to the `App` and `iOS` paths, use
      # git for cache keys.
      - name: Generate cache key
        run: |
          echo $(git rev-parse HEAD:packages/legacy/core/App) > ./dd-cache-key.txt
          echo $(git rev-parse HEAD:packages/legacy/app/ios) >> ./dd-cache-key.txt

      - name: Cache derived data
        uses: actions/cache@v4
        with:
          path: packages/legacy/app/ios/xbuild/Build
          key: ${{ runner.os }}-dd-xcode-${{ env.cacheId }}-${{ hashFiles('**/dd-cache-key.txt') }}
          restore-keys: |
            ${{ runner.os }}-dd-xcode-${{ env.cacheId }}-

      - name: Install React Native Dependencies
        run: |
          yarn install --immutable && \
          git status

      - name: Build Workspace
        run: |
          yarn lerna run build

      - name: Install iOS dependencies
        # if: steps.pod-cache.outputs.cache-hit != 'true' || steps.npm-cache.outputs.cache-hit != 'true'
        working-directory: ./packages/legacy/app
        run: |
          yarn run ios:setup && \
          git status && \
          git diff ios/Podfile.lock

      - name: Run release build
        # if: steps.pod-cache.outputs.cache-hit != 'true' || steps.npm-cache.outputs.cache-hit != 'true'
        working-directory: ./packages/legacy/app/ios
        run: |
          xcodebuild \
          -workspace AriesBifold.xcworkspace \
          -scheme AriesBifold \
          -configuration Release \
          -derivedDataPath xbuild \
          build \
          CODE_SIGNING_ALLOWED=NO \
          CODE_SIGNING_REQUIRED=NO

      # This is a 1G file that adds little to speeding up
      # the build but does impact cache size.
      - name: Cleanup large artifacts
        working-directory: ./packages/legacy/app/ios
        run: |
          rm -rf build/Build/Products/Debug-iphoneos/AriesBifold.app

  build-android:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        compile-sdk: [33]
        build-tools: [33.0.2]
        sdk-tools: [4333796]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11
          cache: 'gradle'

      - name: Setup Android SDK
        working-directory: ./packages/legacy/app/android
        run: |
          set -x
          sudo mkdir -p /root/.android
          sudo touch /root/.android/repositories.cfg
          export ANDROID_HOME=$PWD/android-sdk
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget --quiet --output-document=commandlinetools-linux.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -d $ANDROID_HOME/cmdline-tools commandlinetools-linux.zip
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          find $ANDROID_HOME -name sdkmanager

          export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin
          echo y | sdkmanager "platforms;android-${{ matrix.compile-sdk }}" >/dev/null
          echo y | sdkmanager "platform-tools" >/dev/null
          echo y | sdkmanager "build-tools;${{ matrix.build-tools }}" >/dev/null
          find $ANDROID_HOME -type f -executable -print

          chmod +x ./gradlew
          set +o pipefail
          yes | sdkmanager --licenses
          set -o pipefail

      - name: Install React Native Dependencies
        run: |
          node -v && yarn -v && yarn install --immutable && \
          git status

      - name: Build Workspace
        run: |
          yarn lerna run build

      - name: Android Release Build
        working-directory: ./packages/legacy/app/android
        run: ./gradlew --no-daemon bundleRelease
